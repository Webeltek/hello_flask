diff --git a/node_modules/calendar-utils/calendar-utils.js b/node_modules/calendar-utils/calendar-utils.js
index 5c83ff8..86ef51d 100644
--- a/node_modules/calendar-utils/calendar-utils.js
+++ b/node_modules/calendar-utils/calendar-utils.js
@@ -108,6 +108,7 @@ function getWeekViewEventSpan(dateAdapter, _a) {
         excluded: excluded,
         precision: precision,
     });
+    //console.log("getWeekViewEventSpan"+JSON.stringify(span/SECONDS_IN_DAY));
     return span / SECONDS_IN_DAY;
 }
 function getWeekViewEventOffset(dateAdapter, _a) {
@@ -282,7 +283,10 @@ export function getAllDayWeekEvents(dateAdapter, _a) {
     return allDayEventRows;
 }
 function getWeekViewHourGrid(dateAdapter, _a) {
-    var events = _a.events, viewDate = _a.viewDate, hourSegments = _a.hourSegments, hourDuration = _a.hourDuration, dayStart = _a.dayStart, dayEnd = _a.dayEnd, weekStartsOn = _a.weekStartsOn, excluded = _a.excluded, weekendDays = _a.weekendDays, segmentHeight = _a.segmentHeight, viewStart = _a.viewStart, viewEnd = _a.viewEnd, minimumEventHeight = _a.minimumEventHeight;
+    var events = _a.events, viewDate = _a.viewDate, hourSegments = _a.hourSegments,
+     hourDuration = _a.hourDuration, dayStart = _a.dayStart, dayEnd = _a.dayEnd, 
+     weekStartsOn = _a.weekStartsOn, excluded = _a.excluded, weekendDays = _a.weekendDays, 
+     segmentHeight = _a.segmentHeight, viewStart = _a.viewStart, viewEnd = _a.viewEnd, minimumEventHeight = _a.minimumEventHeight;
     var dayViewHourGrid = getDayViewHourGrid(dateAdapter, {
         viewDate: viewDate,
         hourSegments: hourSegments,
@@ -314,6 +318,8 @@ function getWeekViewHourGrid(dateAdapter, _a) {
         var hours = dayViewHourGrid.map(function (hour) {
             var segments = hour.segments.map(function (segment) {
                 var date = setMinutes(setHours(day.date, getHours(segment.date)), getMinutes(segment.date));
+                //console.log("calutils getMinutes",getMinutes(segment.date));
+                //console.log("calUtils hourDate", date);    
                 return __assign(__assign({}, segment), { date: date });
             });
             return __assign(__assign({}, hour), { segments: segments });
@@ -371,6 +377,7 @@ export function getWeekView(dateAdapter, _a) {
         viewStart: viewStart,
         viewEnd: viewEnd,
     });
+    //console.log("getWeekView()     called");
     return {
         allDayEventRows: getAllDayWeekEvents(dateAdapter, {
             events: eventsInPeriod,
@@ -498,8 +505,13 @@ function getOverLappingWeekViewEvents(events, top, bottom) {
     });
 }
 function getDayView(dateAdapter, _a) {
-    var events = _a.events, viewDate = _a.viewDate, hourSegments = _a.hourSegments, dayStart = _a.dayStart, dayEnd = _a.dayEnd, eventWidth = _a.eventWidth, segmentHeight = _a.segmentHeight, hourDuration = _a.hourDuration, minimumEventHeight = _a.minimumEventHeight;
-    var setMinutes = dateAdapter.setMinutes, setHours = dateAdapter.setHours, startOfDay = dateAdapter.startOfDay, startOfMinute = dateAdapter.startOfMinute, endOfDay = dateAdapter.endOfDay, differenceInMinutes = dateAdapter.differenceInMinutes;
+    var events = _a.events, viewDate = _a.viewDate, hourSegments = _a.hourSegments,
+     dayStart = _a.dayStart, dayEnd = _a.dayEnd, eventWidth = _a.eventWidth, 
+     segmentHeight = _a.segmentHeight, hourDuration = _a.hourDuration, 
+     minimumEventHeight = _a.minimumEventHeight;
+    var setMinutes = dateAdapter.setMinutes, setHours = dateAdapter.setHours,
+     startOfDay = dateAdapter.startOfDay, startOfMinute = dateAdapter.startOfMinute, 
+     endOfDay = dateAdapter.endOfDay, differenceInMinutes = dateAdapter.differenceInMinutes;
     var startOfView = setMinutes(setHours(startOfDay(viewDate), sanitiseHours(dayStart.hour)), sanitiseMinutes(dayStart.minute));
     var endOfView = setMinutes(setHours(startOfMinute(endOfDay(viewDate)), sanitiseHours(dayEnd.hour)), sanitiseMinutes(dayEnd.minute));
     endOfView.setSeconds(59, 999);
@@ -518,7 +530,9 @@ function getDayView(dateAdapter, _a) {
         var eventEnd = event.end || eventStart;
         var startsBeforeDay = eventStart < startOfView;
         var endsAfterDay = eventEnd > endOfView;
-        var hourHeightModifier = (hourSegments * segmentHeight) / (hourDuration || MINUTES_IN_HOUR);
+        //console.log("cal-utils segmHeight",segmentHeight)
+        var hourHeightModifier = (hourSegments * segmentHeight/2) / (hourDuration || MINUTES_IN_HOUR);
+        //console.log("hourHeightmodifier",hourHeightModifier)
         var top = 0;
         if (eventStart > startOfView) {
             // adjust the difference in minutes if the user's offset is different between the start of the day and the event (e.g. when going to or from DST)
@@ -533,6 +547,8 @@ function getDayView(dateAdapter, _a) {
         var endDate = endsAfterDay ? endOfView : eventEnd;
         var timezoneOffset = dateAdapter.getTimezoneOffset(startDate) -
             dateAdapter.getTimezoneOffset(endDate);
+        //console.log("eventStart,eventEnd",eventStart,eventEnd);  
+        //console.log("hourHeightModifier",hourHeightModifier);
         var height = differenceInMinutes(endDate, startDate) + timezoneOffset;
         if (!event.end) {
             height = segmentHeight;
@@ -547,13 +563,15 @@ function getDayView(dateAdapter, _a) {
         var bottom = top + height;
         var overlappingPreviousEvents = getOverLappingWeekViewEvents(previousDayEvents, top, bottom);
         var left = 0;
-        while (overlappingPreviousEvents.some(function (previousEvent) { return previousEvent.left === left; })) {
-            left += eventWidth;
-        }
+        //while (overlappingPreviousEvents.some(function (previousEvent) { return previousEvent.left === left; })) {
+            //left += eventWidth;
+        //}
+        //console.log("event width",height)
+        //console.log("event left",top)
         var dayEvent = {
             event: event,
             height: height,
-            width: eventWidth,
+            width: height,
             top: top,
             left: left,
             startsBeforeDay: startsBeforeDay,
@@ -591,6 +609,8 @@ function getDayViewHourGrid(dateAdapter, _a) {
     var hours = [];
     var startOfView = setMinutes(setHours(startOfDay(viewDate), sanitiseHours(dayStart.hour)), sanitiseMinutes(dayStart.minute));
     var endOfView = setMinutes(setHours(startOfMinute(endOfDay(viewDate)), sanitiseHours(dayEnd.hour)), sanitiseMinutes(dayEnd.minute));
+    hourDuration = hourDuration === 30 ? 60 : 60; // hourDuration must be 60 for wide screen instead of 30
+    //console.log ("cal-utils hourDuration",hourDuration);
     var segmentDuration = (hourDuration || MINUTES_IN_HOUR) / hourSegments;
     var startOfViewDay = startOfDay(viewDate);
     var endOfViewDay = endOfDay(viewDate);
